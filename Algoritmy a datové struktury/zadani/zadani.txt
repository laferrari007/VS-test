# Zadání úkolů pro předmět: Algoritmy a datové struktury
# Vygenerováno: AI
# Datum: 2025-09-15 23:29:15

Úkol 1: Implementujte binární vyhledávací strom (BST) a implementujte funkci pro vkládání nových prvků. Uložte každý prvek jako objekt do stromu a při vkládání prvků, zajistěte, aby strom zůstal BST.

Úkol 2: Implementujte třídou Stack pomocí dvou dynamických polí (pole pro data a pole pro ukazatele). Implementujte metody push, pop a peek.

Úkol 3: Implementujte funkci pro zjištění největšího pravidelného podmnožiny v daném seznamu prvků. Vstupem funkce bude seznam prvků a výstupem bude velikost největšího pravidelného podmnožiny.

Úkol 4: Implementujte funkci pro zjištění největšího pravidelného podmnožiny v daném grafu. Vstupem funkce bude seznam hran a velikost grafu a výstupem bude velikost největšího pravidelného podmnožiny.

Úkol 5: Implementujte funkce pro zjištění největšího spřaženého podgrafu v daném grafu. Vstupem funkce bude seznam hran a velikost grafu a výstupem bude velikost největšího spřaženého podgrafu.

Úkol 6: Implementujte funkci pro zjištění nejkratší cesty mezi dvěma Body v grafu. Vstupem funkce bude seznam hran a velikost grafu, počáteční a koncové vrchol a výstupem bude seznam vrcholů reprezentující nejkratší cestu.

Úkol 7: Implementujte funkci pro zjištění nejkratší cesty mezi dvěma Body v grafu s omezením velikosti balíku. Vstupem funkce bude seznam hran a velikost grafu, počáteční a koncový vrchol a limit velikosti balíku a výstupem bude seznam vrcholů reprezentující nejkratší cestu.

Úkol 8: Implementujte funkci pro zjištění maximální délky souvislého podgrafu v daném grafu. Vstupem funkce bude seznam hran a velikost grafu a výstupem bude délka maximálního souvislého podgrafu.

Úkol 9: Implementujte funkci pro zjištění maximální délky souvislého podgrafu v daném grafu s omezením velikosti balíku. Vstupem funkce bude seznam hran a velikost grafu, limit velikosti balíku a výstupem bude délka maximálního souvislého podgrafu.

Úkol 10: Implementujte funkci pro zjištění komplexnosti algoritmu pro řešení problému TSP (Problém cestovního ruchu) pomocí aproximace metodou 2-opt. Vstupem funkce bude seznam vrcholů a výstupem bude komplexnost algoritmu.
